{
  "stats": {
    "asserts": 231,
    "passes": 212,
    "failures": 19
  },
  "asserts": [
    {
      "number": 1,
      "comment": "default .find()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 2,
      "comment": "default .find()",
      "name": "Count should not be present",
      "ok": true,
      "extra": {}
    },
    {
      "number": 3,
      "comment": "default .find()",
      "name": "default sorting of descending 'updated_at'",
      "ok": true,
      "extra": {}
    },
    {
      "number": 4,
      "comment": ".ascending()",
      "name": ".ascending()",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 5,
      "comment": ".descending()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 6,
      "comment": ".descending()",
      "name": "entries sorted descending on 'created_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 7,
      "comment": ".lessThan()",
      "name": "1 Entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 8,
      "comment": ".lessThan()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 9,
      "comment": ".lessThanOrEqualTo()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 10,
      "comment": ".lessThanOrEqualTo()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 11,
      "comment": ".greaterThan()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 12,
      "comment": ".greaterThan()",
      "name": "entries sorted ascending on 'num_field' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 13,
      "comment": ".greaterThanOrEqualTo()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 14,
      "comment": ".greaterThanOrEqualTo()",
      "name": "entries sorted descending on 'num_field' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 15,
      "comment": ".notEqualTo()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 16,
      "comment": ".notEqualTo()",
      "name": "entries sorted descending on 'num_field' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 17,
      "comment": ".where() compare boolean value (true)",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 18,
      "comment": ".where() compare boolean value (true)",
      "name": "three entries present in the resultset",
      "ok": false,
      "extra": {
        "operator": "equal",
        "expected": "3",
        "actual": "2"
      }
    },
    {
      "number": 19,
      "comment": ".where() compare boolean value (false)",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 20,
      "comment": ".where() compare boolean value (false)",
      "name": "three entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 21,
      "comment": ".equalTo() compare boolean value (true)",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 22,
      "comment": ".equalTo() compare boolean value (true)",
      "name": "three entries present in the resultset",
      "ok": false,
      "extra": {
        "operator": "equal",
        "expected": "3",
        "actual": "2"
      }
    },
    {
      "number": 23,
      "comment": ".equalTo() compare boolean value (false)",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 24,
      "comment": ".equalTo() compare boolean value (false)",
      "name": "three entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 25,
      "comment": ".containedIn()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 26,
      "comment": ".containedIn()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 27,
      "comment": ".notContainedIn()",
      "name": "No Entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 28,
      "comment": ".exists()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 29,
      "comment": ".exists()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 30,
      "comment": ".notExists()",
      "name": "Entries key present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 31,
      "comment": ".notExists()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 32,
      "comment": ".skip()",
      "name": "2 or more Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 33,
      "comment": ".skip()",
      "name": "All elements matched.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 34,
      "comment": ".skip()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 35,
      "comment": ".limit()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 36,
      "comment": ".limit()",
      "name": "All elements matched.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 37,
      "comment": ".limit()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 38,
      "comment": ".count()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 39,
      "comment": ".or() - Query Objects",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 40,
      "comment": ".or() - Query Objects",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 41,
      "comment": ".or() - Raw queries",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 42,
      "comment": ".or() - Raw queries",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 43,
      "comment": ".and() - Query Objects",
      "name": "1 Entry present in the resultset",
      "ok": false,
      "extra": {
        "operator": "ok",
        "expected": "true",
        "actual": "0"
      }
    },
    {
      "number": 44,
      "comment": ".and() - Raw queries",
      "name": "1 Entry present in the resultset",
      "ok": false,
      "extra": {
        "operator": "ok",
        "expected": "true",
        "actual": "0"
      }
    },
    {
      "number": 45,
      "comment": ".query() - Raw query",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 46,
      "comment": ".query() - Raw query",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 47,
      "comment": ".tags()",
      "name": "1 or more Entry/Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 48,
      "comment": ".search()",
      "name": "1 Entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 49,
      "comment": ".regex()",
      "name": "1 or more Entry/Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 50,
      "comment": ".regex()",
      "name": "regexp satisfied for all the entries in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 51,
      "comment": ".includeReference() - String",
      "name": "all the present reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 52,
      "comment": ".includeReference() - Array",
      "name": "all the present reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 53,
      "comment": ".includeCount()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 54,
      "comment": ".includeCount()",
      "name": "Count present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 55,
      "comment": ".includeSchema()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 56,
      "comment": ".includeSchema()",
      "name": "Schema present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 57,
      "comment": ".includeCount() and .includeSchema()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 58,
      "comment": ".includeCount() and .includeSchema()",
      "name": "Schema present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 59,
      "comment": ".includeCount() and .includeSchema()",
      "name": "Count present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 60,
      "comment": ".only() - Single String Parameter",
      "name": "entries with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 61,
      "comment": ".only() - Multiple String Parameter",
      "name": "entries with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 62,
      "comment": ".only() - Array Parameter",
      "name": "entries with the field title,url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 63,
      "comment": ".except() - Single String Parameter",
      "name": "entries without the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 64,
      "comment": ".except() - Multiple String Parameter",
      "name": "entries without the field title, url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 65,
      "comment": ".except() - Array of String Parameter",
      "name": "entries without the field title, file in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 66,
      "comment": ".except() - For the reference - String",
      "name": "entries with the field reference without title field in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 67,
      "comment": ".except() - For the reference - Array",
      "name": "entries with the field reference without title field in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 68,
      "comment": "default .find()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 69,
      "comment": "default .find()",
      "name": "Count should not present in the result",
      "ok": true,
      "extra": {}
    },
    {
      "number": 70,
      "comment": "default .find()",
      "name": "default sorting of descending 'updated_at'",
      "ok": true,
      "extra": {}
    },
    {
      "number": 71,
      "comment": ".ascending()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 72,
      "comment": ".ascending()",
      "name": "entries sorted ascending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 73,
      "comment": ".descending()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 74,
      "comment": ".descending()",
      "name": "entries sorted descending on 'created_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 75,
      "comment": ".lessThan()",
      "name": "1 Entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 76,
      "comment": ".lessThan()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 77,
      "comment": ".lessThanOrEqualTo()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 78,
      "comment": ".lessThanOrEqualTo()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 79,
      "comment": ".greaterThan()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 80,
      "comment": ".greaterThan()",
      "name": "entries sorted ascending on 'num_field' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 81,
      "comment": ".greaterThanOrEqualTo()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 82,
      "comment": ".greaterThanOrEqualTo()",
      "name": "entries sorted descending on 'num_field' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 83,
      "comment": ".notEqualTo()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 84,
      "comment": ".notEqualTo()",
      "name": "entries sorted descending on 'num_field' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 85,
      "comment": ".containedIn()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 86,
      "comment": ".containedIn()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 87,
      "comment": ".notContainedIn()",
      "name": "No Entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 88,
      "comment": ".exists()",
      "name": "Entries should not be present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 89,
      "comment": ".notExists()",
      "name": "Entries key present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 90,
      "comment": ".notExists()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 91,
      "comment": ".skip()",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 92,
      "comment": ".limit()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 93,
      "comment": ".limit()",
      "name": "All elements matched.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 94,
      "comment": ".limit()",
      "name": "entries sorted descending on 'updated_at' field",
      "ok": true,
      "extra": {}
    },
    {
      "number": 95,
      "comment": ".count()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 96,
      "comment": ".or() - Query Objects",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 97,
      "comment": ".or() - Query Objects",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 98,
      "comment": ".or() - Raw queries",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 99,
      "comment": ".or() - Raw queries",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 100,
      "comment": ".and() - Query Objects",
      "name": "1 Entry present in the resultset",
      "ok": false,
      "extra": {
        "operator": "ok",
        "expected": "true",
        "actual": "0"
      }
    },
    {
      "number": 101,
      "comment": ".and() - Raw queries",
      "name": "1 Entry present in the resultset",
      "ok": false,
      "extra": {
        "operator": "ok",
        "expected": "true",
        "actual": "0"
      }
    },
    {
      "number": 102,
      "comment": ".query() - Raw query",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 103,
      "comment": ".query() - Raw query",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 104,
      "comment": ".tags()",
      "name": "1 or more Entry/Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 105,
      "comment": ".search()",
      "name": "1 or more Entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 106,
      "comment": ".regex()",
      "name": "1 or more Entry/Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 107,
      "comment": ".regex()",
      "name": "regexp satisfied for all the entries in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 108,
      "comment": ".includeReference() - String",
      "name": "all the present reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 109,
      "comment": ".includeReference() - Array",
      "name": "all the present reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 110,
      "comment": ".includeCount()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 111,
      "comment": ".includeCount()",
      "name": "Count present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 112,
      "comment": ".includeSchema()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 113,
      "comment": ".includeSchema()",
      "name": "Schema present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 114,
      "comment": ".includeCount() and .includeSchema()",
      "name": "Entries present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 115,
      "comment": ".includeCount() and .includeSchema()",
      "name": "Schema present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 116,
      "comment": ".includeCount() and .includeSchema()",
      "name": "Count present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 117,
      "comment": ".only() - Single String Parameter",
      "name": "entries with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 118,
      "comment": ".only() - Multiple String Parameter",
      "name": "entries with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 119,
      "comment": ".only() - Array Parameter",
      "name": "entries with the field title,url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 120,
      "comment": ".except() - Single String Parameter",
      "name": "entries without the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 121,
      "comment": ".except() - Multiple String Parameter",
      "name": "entries without the field title, url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 122,
      "comment": ".except() - Array of String Parameter",
      "name": "entries without the field title, file in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 123,
      "comment": ".except() - For the reference - String",
      "name": "entries withthe field reference without title field in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 124,
      "comment": ".except() - For the reference - Array",
      "name": "entries with the field reference without title field in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 125,
      "comment": "findOne:  default .toJSON().findOne()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 126,
      "comment": "findOne:  .ascending()",
      "name": "findOne: .ascending()",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 127,
      "comment": "findOne:  .descending()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 128,
      "comment": "findOne:  .lessThan()",
      "name": "Entry num_field having value less than 11.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 129,
      "comment": "findOne:  .lessThan()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 130,
      "comment": "findOne:  .lessThanOrEqualTo()",
      "name": "Entry num_field having value less than or equal to 11.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 131,
      "comment": "findOne:  .lessThanOrEqualTo()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 132,
      "comment": "findOne:  .greaterThan()",
      "name": "Entry num_field having value greater than 6.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 133,
      "comment": "findOne:  .greaterThan()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 134,
      "comment": "findOne:  .greaterThanOrEqualTo()",
      "name": "Entry num_field having value greater than 11.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 135,
      "comment": "findOne:  .greaterThanOrEqualTo()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 136,
      "comment": "findOne:  .notEqualTo()",
      "name": "Entry num_field having value is not equal to 6.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 137,
      "comment": "findOne:  .notEqualTo()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 138,
      "comment": "findOne:  .containedIn()",
      "name": "Entry title exists from the available options Multiple Assets, Multiple Assets 2.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 139,
      "comment": "findOne:  .containedIn()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 140,
      "comment": "findOne:  .notContainedIn()",
      "name": "No entry found",
      "ok": true,
      "extra": {}
    },
    {
      "number": 141,
      "comment": "findOne:  .exists()",
      "name": "Entry having the assets.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 142,
      "comment": "findOne:  .exists()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 143,
      "comment": "findOne:  .notExists()",
      "name": "Entry having the isspecial.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 144,
      "comment": "findOne:  .notExists()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 145,
      "comment": "findOne:  .skip()",
      "name": "entry key present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 146,
      "comment": "findOne:  .skip()",
      "name": "Element matched.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 147,
      "comment": "findOne:  .or() - Query Objects",
      "name": "Entry satisfies the $OR condition",
      "ok": true,
      "extra": {}
    },
    {
      "number": 148,
      "comment": "findOne:  .or() - Query Objects",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 149,
      "comment": "findOne:  .or() - Raw queries",
      "name": "Entry satisfies the $OR condition",
      "ok": true,
      "extra": {}
    },
    {
      "number": 150,
      "comment": "findOne:  .or() - Raw queries",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 151,
      "comment": "findOne:  .and() - Query Objects",
      "name": "findOne: .and() - Query Objects",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 152,
      "comment": "findOne:  .and() - Raw queries",
      "name": "findOne: .and() - Raw queries",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 153,
      "comment": "findOne:  .query() - Raw query",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 154,
      "comment": "findOne:  .query() - Raw query",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 155,
      "comment": "findOne:  .tags()",
      "name": "findOne: .tags()",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 156,
      "comment": "findOne:  .search()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 157,
      "comment": "findOne:  .regex()",
      "name": "Entry should have publish_details, uid, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 158,
      "comment": "findOne:  .regex()",
      "name": "regexp satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 159,
      "comment": "findOne:  .includeReference() - String",
      "name": "all the present reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 160,
      "comment": "findOne:  .includeReference() - Array",
      "name": "all the present reference and other reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 161,
      "comment": "findOne:  .includeSchema()",
      "name": "Entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 162,
      "comment": "findOne:  .only() - Single String Parameter",
      "name": "entry with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 163,
      "comment": "findOne:  .only() - Multiple String Parameter",
      "name": "entry with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 164,
      "comment": "findOne:  .only() - Array Parameter",
      "name": "entry with the field title,url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 165,
      "comment": "findOne:  .only() - For the reference - String",
      "name": "Entry has the reference with only paramteres.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 166,
      "comment": "findOne:  .only() - For the reference - Array",
      "name": "Entry has the reference with only paramteres.",
      "ok": false,
      "extra": {
        "operator": "equal",
        "expected": "true",
        "actual": "false"
      }
    },
    {
      "number": 167,
      "comment": "findOne:  .except() - Single String Parameter",
      "name": "entry without the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 168,
      "comment": "findOne:  .except() - Multiple String Parameter",
      "name": "entry without the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 169,
      "comment": "findOne:  .except() - Array of String Parameter",
      "name": "entry without the field title, file in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 170,
      "comment": "findOne:  .except() - For the reference - String",
      "name": "entry with the field reference without title field in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 171,
      "comment": "findOne:  .except() - For the reference - Array",
      "name": "entry with the field reference without title field in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 172,
      "comment": "findOne:  default .findOne()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 173,
      "comment": "findOne:  .ascending()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 174,
      "comment": "findOne:  .descending()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 175,
      "comment": "findOne:  .lessThan()",
      "name": "Entry num_field having value less than 11.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 176,
      "comment": "findOne:  .lessThan()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 177,
      "comment": "findOne:  .lessThanOrEqualTo()",
      "name": "Entry num_field having value less than or equal to 11.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 178,
      "comment": "findOne:  .lessThanOrEqualTo()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 179,
      "comment": "findOne:  .greaterThan()",
      "name": "Entry num_field having value greater than 6.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 180,
      "comment": "findOne:  .greaterThan()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 181,
      "comment": "findOne:  .greaterThanOrEqualTo()",
      "name": "Entry num_field having value greater than 11.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 182,
      "comment": "findOne:  .greaterThanOrEqualTo()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 183,
      "comment": "findOne:  .notEqualTo()",
      "name": "Entry num_field having value is not equal to 6.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 184,
      "comment": "findOne:  .notEqualTo()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 185,
      "comment": "findOne:  .containedIn()",
      "name": "Entry title exists from the available options Multiple Assets, Multiple Assets 2.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 186,
      "comment": "findOne:  .containedIn()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 187,
      "comment": "findOne:  .notContainedIn()",
      "name": "Entry title not exists from the available options Multiple Assets.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 188,
      "comment": "findOne:  .notContainedIn()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 189,
      "comment": "findOne:  .exists()",
      "name": "Entry having the assets.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 190,
      "comment": "findOne:  .exists()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 191,
      "comment": "findOne:  .notExists()",
      "name": "No entry found",
      "ok": false,
      "extra": {
        "operator": "deepEqual",
        "expected": "|-",
        "actual": "|-"
      }
    },
    {
      "number": 192,
      "comment": "findOne:  .skip()",
      "name": "entry key present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 193,
      "comment": "findOne:  .skip()",
      "name": "Element matched.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 194,
      "comment": "findOne:  .or() - Query Objects",
      "name": "Entry satisfies the $OR condition",
      "ok": true,
      "extra": {}
    },
    {
      "number": 195,
      "comment": "findOne:  .or() - Query Objects",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 196,
      "comment": "findOne:  .or() - Raw queries",
      "name": "Entry satisfies the $OR condition",
      "ok": true,
      "extra": {}
    },
    {
      "number": 197,
      "comment": "findOne:  .or() - Raw queries",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 198,
      "comment": "findOne:  .and() - Query Objects",
      "name": "findOne: .and() - Query Objects",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 199,
      "comment": "findOne:  .and() - Raw queries",
      "name": "findOne: .and() - Raw queries",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 200,
      "comment": "findOne:  .query() - Raw query",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 201,
      "comment": "findOne:  .query() - Raw query",
      "name": "$OR condition satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 202,
      "comment": "findOne:  .tags()",
      "name": "findOne: .tags()",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 203,
      "comment": "findOne:  .search()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 204,
      "comment": "findOne:  .regex()",
      "name": "Entry should have uid, publish_details, locale.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 205,
      "comment": "findOne:  .regex()",
      "name": "regexp satisfied",
      "ok": true,
      "extra": {}
    },
    {
      "number": 206,
      "comment": "findOne:  .includeReference() - String",
      "name": "all the present reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 207,
      "comment": "findOne:  .includeReference() - Array",
      "name": "all the present reference and other reference are included",
      "ok": true,
      "extra": {}
    },
    {
      "number": 208,
      "comment": "findOne:  .includeSchema()",
      "name": "entry present in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 209,
      "comment": "findOne:  .only() - Single String Parameter",
      "name": "entry with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 210,
      "comment": "findOne:  .only() - Multiple String Parameter",
      "name": "entry with the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 211,
      "comment": "findOne:  .only() - Array Parameter",
      "name": "entry with the field title,url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 212,
      "comment": "findOne:  .only() - For the reference - String",
      "name": "Entry has the reference with only paramteres.",
      "ok": true,
      "extra": {}
    },
    {
      "number": 213,
      "comment": "findOne:  .only() - For the reference - Array",
      "name": "Entry has the reference with only paramteres.",
      "ok": false,
      "extra": {
        "operator": "equal",
        "expected": "true",
        "actual": "false"
      }
    },
    {
      "number": 214,
      "comment": "findOne:  .except() - Single String Parameter",
      "name": "entry without the field title in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 215,
      "comment": "findOne:  .except() - Multiple String Parameter",
      "name": "entry without the field title, url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 216,
      "comment": "findOne:  .except() - Array of String Parameter",
      "name": "entry without the field title, url in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 217,
      "comment": "findOne:  .except() - For the reference - String",
      "name": "entry with the field reference without title field in the resultset",
      "ok": true,
      "extra": {}
    },
    {
      "number": 218,
      "comment": "findOne:  .except() - For the reference - Array",
      "name": "findOne: .except() - For the reference - Array",
      "ok": false,
      "extra": {
        "operator": "fail"
      }
    },
    {
      "number": 219,
      "comment": "entries as first argument",
      "name": "Entries exists as first parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 220,
      "comment": "entries as first argument",
      "name": "default sorting of descending 'updated_at'",
      "ok": true,
      "extra": {}
    },
    {
      "number": 221,
      "comment": "with entries and count argument",
      "name": "Entries exists as first parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 222,
      "comment": "with entries and count argument",
      "name": "Count exists as second parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 223,
      "comment": "with entries and count argument",
      "name": "default sorting of descending 'updated_at'",
      "ok": true,
      "extra": {}
    },
    {
      "number": 224,
      "comment": "with entries, schema and count argument",
      "name": "Entries exists as first parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 225,
      "comment": "with entries, schema and count argument",
      "name": "Schema exists as second parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 226,
      "comment": "with entries, schema and count argument",
      "name": "Count exists as third parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 227,
      "comment": "with entries, schema and count argument",
      "name": "default sorting of descending 'updated_at'",
      "ok": true,
      "extra": {}
    },
    {
      "number": 228,
      "comment": "with entries, schema and count argument",
      "name": "Entries exists as first parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 229,
      "comment": "with entries, schema and count argument",
      "name": "Schema exists as second parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 230,
      "comment": "with entries, schema and count argument",
      "name": "Count exists as third parameter",
      "ok": true,
      "extra": {}
    },
    {
      "number": 231,
      "comment": "with entries, schema and count argument",
      "name": "default sorting of descending 'updated_at'",
      "ok": true,
      "extra": {}
    }
  ]
}
